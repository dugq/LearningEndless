allprojects {

    buildscript {

        ext["springBootVersion"] = "2.2.7.RELEASE"
        ext["springCloudVersion"] = "Hoxton.SR6"
        ext["lombok.version"] = "1.18.12"
        ext["dubboVersion"] = "3.2.9"

        repositories {
            maven { url "https://plugins.gradle.org/m2/" }
            maven { url "http://repo.spring.io/plugins-release" }
            mavenCentral()
            mavenLocal()
        }

        dependencies {
            classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
            classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
        }
    }

    apply plugin: "com.google.cloud.tools.jib"
    apply plugin: "maven"
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "jacoco"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"
    test {
        ignoreFailures = true
    }

    group = "com.example"
    version = "0.0.1-SNAPSHOT"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        all*.exclude group: "javax.servlet", module: "servlet-api" //servlet 2.5
        all*.exclude group: "com.alibaba", module: "dubbo"
        all*.exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-xml"
        all*.exclude group: "com.zaxxer", module: "HikariCP-java7"
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        mavenCentral()
    }

    dependencyManagement {

        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
                mavenBom "org.apache.dubbo:dubbo-bom:${dubboVersion}"
            }
        }

    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'com.alibaba:fastjson:2.0.26'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation "org.springframework.boot:spring-boot-starter-test"
        annotationProcessor 'org.projectlombok:lombok:1.18.4'
        compileOnly 'org.projectlombok:lombok:1.18.4'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'

        testCompileOnly 'org.projectlombok:lombok:1.18.4'

        implementation('org.apache.dubbo:dubbo-serialization-kryo:2.7.23'){
            exclude group:  'org.apache.dubbo' , module: 'dubbo-serialization-api'
        }
    }

    install {
        enabled = false
    }
    uploadArchives {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }


}

bootJar {
    archiveName = "DubboZk.jar"
}
