buildscript {

    ext["springBootVersion"] = "2.2.7.RELEASE"
    ext["springCloudVersion"] = "Hoxton.SR6"
    ext["hazelcast.version"] = "3.11"
    ext["curator.version"] = "2.13.0"
    ext["guava.version"] = "28.2-jre"
    ext["lombok.version"] = "1.18.12"

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
    }
}

apply plugin: "com.google.cloud.tools.jib"
apply plugin: "maven"
apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "jacoco"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
test {
    ignoreFailures = true
}

group = "com.example"
version = "0.0.1-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    archiveName = "NettyDemo.jar"
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/spring/' }
    maven { url "http://repo.spring.io/plugins-release" }
    mavenCentral()
}


dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation("org.springframework.boot:spring-boot-starter-reactor-netty")
    implementation project(path: ':NettyCommon')


    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.4'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.test {
    useJUnitPlatform()
}
