// 配置当前gradle脚本运行需要的东西 --- 这里要注意区别，这里这么认为，buildscript标签里的东西是为了本构建脚本能正常运行所需要的必要配置
// 这个配置是会遗传给子项目的
buildscript {
//    所有项目共享的属性列表
    ext["springBootVersion"] = "2.2.7.RELEASE"
    ext["lombok.version"] = "1.18.12"
    ext["springCloudVersion"] = "Hoxton.SR6"
    ext["dubboVersion"] = "3.2.9"

//配置gradle 插件的依赖
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
    }
//配置gradle插件仓库
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }
}
apply plugin: "io.spring.dependency-management"

// 这里算用于本项目构建脚本的开始
// 所有项目公用的构建脚本
allprojects {

    apply plugin: "maven"
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"


    group = "com.example"
    version = "0.0.1-SNAPSHOT"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // 配置所有项目依赖的仓库地址。
    // 这里放弃mavenLocal()，因为本地仓库地址不适合每个人。没啥用
    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }

    dependencyManagement {
        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }

        // 这个插件还可以在这里对一些jar包版本进行声明： 这样后续在使用的时候就可以不用添加版本
        // 对于一些公用版本，这里可以进行统一的控制
            dependency 'org.apache.commons:commons-lang3:3.12.0'
        }
    }

    // 这里配置一些公用依赖.这里最好不要乱加东西。
    // 有些API类型的jar包，我们希望它是纯净的，它不需要任何额外的jar包
    // 它只作为某些应用沟通的桥梁，我不希望它会花里胡哨的引入乱七八糟的东西
    dependencies {
//        lombok插件
        annotationProcessor 'org.projectlombok:lombok:1.18.4'
        compileOnly 'org.projectlombok:lombok:1.18.4'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
        testCompileOnly 'org.projectlombok:lombok:1.18.4'
//工具类
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'com.alibaba:fastjson:2.0.26'
    }


    install {
        enabled = false
    }
    uploadArchives {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    bootJar {
        archiveBaseName = "${project.name}"
    }

    test {
        ignoreFailures = true
    }
}


// 这里配置当前项目所需的依赖
dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-freemarker"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-hystrix"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-ribbon"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2"

    implementation 'com.alibaba:fastjson:2.0.26'

    implementation 'commons-beanutils:commons-beanutils:20030211.134440'
    implementation 'commons-collections:commons-collections:20040616'
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

    implementation group: 'org.apache.shiro', name: 'shiro-core', version: '1.10.0'
    implementation group: 'org.apache.shiro', name: 'shiro-spring', version: '1.7.0'
    implementation group: 'org.apache.shiro', name: 'shiro-ehcache', version: '1.2.2'

    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.3'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'

    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.42'

    implementation "org.springframework.boot:spring-boot-starter-jdbc"

    implementation group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    implementation group: 'com.github.pagehelper', name: 'pagehelper', version: '4.0.1'

    compile('io.lettuce:lettuce-core')
    compile("redis.clients:jedis")
    implementation group: 'com.alibaba', name: 'druid', version: '1.0.23'
    implementation group: 'com.alipay.sdk', name: 'alipay-sdk-java', version: '3.3.4.ALL'
    compile('org.springframework.boot:spring-boot-autoconfigure')
    implementation group: 'com.caucho', name: 'hessian', version: '4.0.38'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '5.3.5.Final'

    implementation 'io.protostuff:protostuff-core:1.4.0'
    implementation 'io.protostuff:protostuff-runtime:1.4.0'

    implementation group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.9.0'

    // sso版本，请使用 3.0.20 以上

    implementation "org.springframework.boot:spring-boot-starter-test"



    implementation 'org.javatuples:javatuples:1.2'
    implementation 'com.google.guava:guava:29.0-jre'

    implementation 'eu.bitwalker:UserAgentUtils:1.21'

    compileOnly("org.openjdk.jol:jol-core:0.16")

}
